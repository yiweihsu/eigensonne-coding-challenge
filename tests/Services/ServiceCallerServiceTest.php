<?php

namespace App\tests\Services;

use Services\ServiceCallerService;
use Services\UrlMapperService;
use Services\ApiFetcherService;
use PHPUnit\Framework\TestCase;

class ServiceCallerServiceTest extends TestCase 
{
    private $serviceCallerService;

    public function setUp()
    {
        $this->serviceCallerService = new serviceCallerService('best', new UrlMapperService(), new ApiFetcherService());
    }

    public function testGetUrl()
    {
        $url = $this->serviceCallerService->getUrl();
        $this->assertEquals('string', gettype($url));
        $this->assertEquals('https://hacker-news.firebaseio.com/v0/beststories.json', $url);
    }

    public function testGetData()
    {
        $data = $this->serviceCallerService->getData();
        $this->assertEquals('object', gettype($data));
        $this->assertEquals(200, $data->getStatusCode());
        // $this->assertEquals('[18720850,18724107,18725413,18730933,18743465,18727020,18736378,18719816,18736116,18746132,18740939,18729394,18737468,18739520,18738175,18723936,18732973,18736700,18742640,18733055,18725425,18720187,18739906,18738775,18738275,18733799,18721635,18735663,18721754,18734421,18733837,18730938,18733048,18725438,18746591,18731508,18731451,18744696,18725971,18729224,18721555,18731460,18744464,18735903,18730749,18723676,18734999,18728851,18745182,18744138,18729401,18727372,18729001,18724523,18736473,18720604,18742199,18734589,18723138,18730588,18745763,18732217,18723052,18733892,18724938,18728816,18728952,18742484,18741718,18726289,18742523,18735570,18733535,18739257,18724362,18721594,18736880,18740197,18720175,18733824,18724221,18732012,18730778,18740986,18740000,18740955,18738858,18733085,18727456,18734658,18731476,18728599,18727263,18745531,18734808,18730314,18725485,18720378,18736698,18722952,18721513,18740900,18729822,18738424,18736445,18734584,18726038,18723177,18719592,18731322,18726534,18722249,18733244,18742971,18739419,18745533,18745275,18739618,18727681,18742826,18724989,18722541,18745294,18743628,18746127,18733433,18740485,18728396,18736546,18735125,18735023,18732990,18727874,18727312,18739535,18735334,18741333,18738261,18738032,18740487,18737127,18729898,18727370,18726927,18723907,18743895,18734047,18724171,18738948,18727070,18733173,18729363,18722548,18740545,18738182,18732875,18719580,18728581,18723383,18743835,18742559,18732726,18742699,18740050,18734037,18728959,18728827,18741694,18730687,18726648,18720266,18745346,18729294,18727280,18725824,18741644,18722547,18745434,18740505,18738939,18736629,18739619,18739049,18738516,18732961,18730829,18732142,18734197,18732913,18726736,18725857,18722757,18719606,18744687,18744659,18742801,18732699,18727675,18726258,18747302]', $data->getBody()->getContents());
    }
}